name: CD

env:
  ORGANIZATION: gamelly

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: build ${{ matrix.project.repo }} ${{ matrix.project.name }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        project:
          - 
            name: cli
            repo: gly-engine
            lua: true
            command: ./cli.sh cli-build
          # - 
          #   name: cli-bundler
          #   repo: gly-engine
          #   lua: true
          #   command: lua tools/cd_lua_bundler.lua
          # - 
          #   name: bundler
          #   repo: gly-engine
          #   lua: true
          #   command: ./cli.sh bundler src/lib/cli/bundler.lua
          - 
            repo: server-ginga-ccws
            docker: "oven/bun:latest"
            command: bash -c "bun run build;mkdir dist;cp ccws dist"
          - 
            name: 30fps
            repo: core-native-gba
            docker: "devkitpro/devkitarm:20240906"
            command: bash -c "cmake -Bbuild -H. -DFPS_MODE=2 && make -C build && mv build/bin/game.gba dist/core-native-gba-30fps.gba"
          - 
            name: 20fps
            repo: core-native-gba
            docker: "devkitpro/devkitarm:20240906"
            command: bash -c "cmake -Bbuild -H. -DFPS_MODE=3 && make -C build && mv build/bin/game.gba dist/core-native-gba-20fps.gba"
          - 
            repo: core-native-nds
            docker: "devkitpro/devkitarm:20240906"
            command: bash -c "cmake -Bbuild -H. -DTEMPLATE_SIZE=2048000 && make -C build && mv build/bin/game.nds dist/core-native-nds.nds"
          # - 
          #   repo: core-native-ps1
          #   command: cmake -Bbuild -H. -DGAME_BYTECODE=off && make -C build && mv build/game.elf dist/core-native-ps1.elf
    steps:
      -
        uses: actions/checkout@v4
        with:
          repository: ${{ env.ORGANIZATION }}/${{ matrix.project.repo }}
          ref: main
      -
        if: ${{ matrix.project.lua }}
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: '5.4'
      -
        run: mkdir -p dist
      -
        if: ${{ !matrix.project.docker }}
        run: ${{ matrix.project.command }}
      -
        if: ${{ matrix.project.docker }}
        run: docker run --rm -v $(pwd):/app -w /app ${{ matrix.project.docker }} ${{ matrix.project.command }}
      -
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.project.repo }}${{ matrix.project.name }}
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - 
        uses: actions/checkout@v4
      - 
        uses: actions/download-artifact@v4
        with:
          path: all-dists
      - 
        run: |
          mkdir dist
          index=0
          for artifact in all-dists/*; do
            if [ -d "$artifact" ]; then
              cp -r $artifact/* dist/
              echo "Artifact $index: $(basename $artifact)"
              index=$((index+1))
            fi
          done
      -
        run: node index.js
      -
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist
      - 
        uses: actions/deploy-pages@v4
